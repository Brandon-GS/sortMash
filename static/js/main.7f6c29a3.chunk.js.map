{"version":3,"sources":["components/Body.jsx","actions/index.js","algorithms/heapSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/cocktailSort.js","algorithms/bubbleSort.js","components/ButtonAlgorithm.jsx","components/Toolbar.jsx","App.js","reducers/array/index.js","reducers/algorithm/index.js","reducers/running/index.js","reducers/swappers/index.js","reducers/sorted/index.js","reducers/bubbleSort/index.js","reducers/heapSort/index.js","reducers/mergeSort/index.js","reducers/quickSort/index.js","reducers/cocktailSort/index.js","reducers/insertionSort/index.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["Body","reduxState","useSelector","state","array","swappers","sorted","pivot","bubbleSort","mergeSort","quickSort","heapSort","cocktailSort","insertionSort","numWidth","Math","floor","$","document","width","length","numMargin","margin","color","fontSize","id","map","number","index","backgroundColor","includes","className","key","style","height","marginLeft","marginRigh","setArray","type","setSorted","setRunning","isRunning","setSwappers","setBubble","setHeap","setMerge","setQuick","setPivot","setCocktail","actions","setAlgorithm","algorithm","setInsertion","siftDown","start","end","toDispatch","swap","left","right","push","temp","slice","stateArray","dispatch","speed","currentIndex","buildMaxHeap","handleDispatch","num","setTimeout","dispatchFunction","shift","finalArray","mergeSortHelper","obj","half","first","second","indexHalf","actualFirst","actualSecond","isFinalMerge","sortedArray","indexToPush","forEach","subArr","concat","actualSort","idx","currentToDispatch","quickSortHelper","Array","roundLeft","roundRight","i","aux","j","round","ButtonAlgorithm","children","useDispatch","pow","cursor","onClick","doSort","sort","Toolbar","generateArray","random","useState","classMenu","setClassMenu","loading","setLoading","sizeArray","setSizeArray","useEffect","min","value","max","disabled","onChange","e","target","App","initialState","action","initialStateOne","initalState","combineReducers","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f6c29a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport $ from 'jquery';\r\n\r\nconst Body = () => {\r\n\r\n    const reduxState = useSelector(state => state);\r\n    const { array, swappers, sorted, pivot, bubbleSort, mergeSort, quickSort, heapSort, cocktailSort, insertionSort } = reduxState;\r\n\r\n    const numWidth = Math.floor($(document).width() / (array.length * 3));\r\n    const width = `${numWidth}px`;\r\n    const numMargin = array.length < 5 ?\r\n        10 : array.length < 8 ?\r\n            8 : array.length < 11 ?\r\n                6 : array.length < 20 ?\r\n                    4 : array.length < 50 ?\r\n                        3.5 : array.length < 100 ?\r\n                            3 : array.length < 130 ?\r\n                                2.5 : 2;\r\n    const margin = `${numMargin}px`;\r\n    const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n    const numFont = numWidth > 70 ?\r\n        20 : numWidth > 60 ?\r\n            18 : numWidth > 50 ?\r\n                16 : numWidth > 40 ?\r\n                    14 : numWidth > 30 ?\r\n                        12 : numWidth > 20 ?\r\n                            10 : 8;\r\n    const fontSize = `${numFont}px`\r\n\r\n    return (\r\n        <div id=\"bodyContainer\">\r\n            {array.length ? array.map((number, index) => {\r\n                const backgroundColor = swappers.includes(index) ?\r\n                    /* Rojo */\"rgba(214, 48, 49,0.8)\" : bubbleSort.includes(index) ||\r\n                        quickSort.includes(index) || heapSort.includes(index) ||\r\n                        mergeSort.includes(index) || cocktailSort.includes(index) || insertionSort.includes(index) ?\r\n                        /* Color verde */ \"rgba(106, 176, 76,0.8)\" : pivot === index ?\r\n                        /* Color amarillo */    \"rgba(237, 234, 59, 0.8)\" : sorted.includes(index) ?\r\n                        /* Color morado */  \"rgba(108, 92, 231,1.0)\" : \"rgba(0, 168, 255,0.8)\";\r\n                return <div\r\n                    className=\"arrayElement\"\r\n                    key={index}\r\n                    style={{ height: `${number * 3}px`, width: width, marginLeft: margin, marginRigh: margin, backgroundColor: backgroundColor, color: color, fontSize: fontSize }}>\r\n                    {number}\r\n                </div>\r\n            }) : null\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Body;","export const setArray = (array) => {\r\n    return {\r\n        type: \"SET_ARRAY\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const setAlgorithm = (algorithm) => {\r\n    return {\r\n        type: \"SET_ALGORITHM\",\r\n        algorithm\r\n    }\r\n}\r\n\r\nexport const setSorted = (sorted) => {\r\n    return {\r\n        type: \"SET_SORTED\",\r\n        sorted\r\n    }\r\n}\r\n\r\nexport const setRunning = (isRunning) => {\r\n    return {\r\n        type: \"SET_RUNNING\",\r\n        isRunning\r\n    }\r\n}\r\n\r\nexport const setSwappers = (swappers) => {\r\n    return {\r\n        type: \"SET_SWAPPERS\",\r\n        swappers\r\n    }\r\n}\r\n\r\nexport const setBubble = (array) => {\r\n    return {\r\n        type: \"SET_BUBBLE\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const setHeap = (array) => {\r\n    return {\r\n        type: \"SET_HEAP\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const setMerge = (array) => {\r\n    return {\r\n        type: \"SET_MERGE\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const setQuick = (array) => {\r\n    return {\r\n        type: 'SET_QUICK',\r\n        array\r\n    }\r\n}\r\n\r\nexport const setPivot = (pivot) => {\r\n    return {\r\n        type: \"SET_PIVOT\",\r\n        pivot\r\n    }\r\n}\r\n\r\nexport const setCocktail = (array) => {\r\n    return {\r\n        type: \"SET_COCKTAIL\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const setInsertion = (array) => {\r\n    return {\r\n        type: \"SET_INSERTION\",\r\n        array\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setArray,\r\n    setAlgorithm,\r\n    setSorted,\r\n    setRunning,\r\n    setSwappers,\r\n    setBubble,\r\n    setHeap,\r\n    setMerge,\r\n    setQuick,\r\n    setPivot,\r\n    setCocktail,\r\n    setInsertion\r\n}","import {\r\n    setArray,\r\n    setSorted,\r\n    setRunning,\r\n    setHeap,\r\n    setSwappers\r\n} from '../actions/'\r\n\r\nfunction heapSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n      toDispatch = [];\r\n  buildMaxHeap(array, toDispatch);\r\n  let end = array.length - 1;\r\n  while (end > 0) {\r\n    toDispatch.push([0, end]);\r\n    let temp = array[end];\r\n    array[end] = array[0];\r\n    array[0] = temp;\r\n    toDispatch.push([0, end, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    toDispatch.push([true, end]);\r\n    siftDown(array, 0, end, toDispatch);\r\n    end--;\r\n  }\r\n  toDispatch.push([true, end]);\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction buildMaxHeap(array, toDispatch) {\r\n  let currentIndex = Math.floor(array.length / 2);\r\n  while (currentIndex >= 0) {\r\n    siftDown(array, currentIndex, array.length, toDispatch);\r\n    currentIndex--;\r\n  }\r\n}\r\n\r\nfunction siftDown(array, start, end, toDispatch) {\r\n  if (start >= Math.floor(end / 2)) {\r\n    return;\r\n  }\r\n  let left = start * 2 + 1,\r\n      right = start * 2 + 2 < end ? start * 2 + 2 : null,\r\n      swap;\r\n  if (right) {\r\n    toDispatch.push([start, left, right]);\r\n    swap = array[left] > array[right] ? left : right;\r\n  } else {\r\n    toDispatch.push([start, left]);\r\n    swap = left;\r\n  }\r\n  if (array[start] < array[swap]) {\r\n    let temp = array[swap];\r\n    array[swap] = array[start];\r\n    array[start] = temp;\r\n    toDispatch.push([start, swap, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    siftDown(array, swap, end, toDispatch);\r\n  }\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setHeap(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setHeap([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = toDispatch[0].length > 3 ?\r\n      setArray : toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\" || !toDispatch[0].length ?\r\n        setSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n          setSorted : setHeap;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default heapSort;","import {\r\n    setArray,\r\n    setRunning,\r\n    setSwappers,\r\n    setSorted,\r\n    setMerge\r\n} from '../actions'\r\n\r\nfunction mergeSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        toDispatch = [];\r\n    let finalArray = mergeSortHelper(array.map((num, idx) => [num, idx]), toDispatch, 0, array.length - 1, { array: array.slice(0) });\r\n    handleDispatch(toDispatch, dispatch, finalArray, speed);\r\n}\r\n\r\nfunction mergeSortHelper(array, toDispatch, start, end, obj) {\r\n    if (array.length === 1) {\r\n        return array;\r\n    }\r\n    let half = Math.floor(array.length / 2),\r\n        first = array.slice(0, half),\r\n        second = array.slice(half),\r\n        indexHalf = Math.floor((end + 1 + start) / 2),\r\n        actualFirst = mergeSortHelper(first, toDispatch, start, indexHalf - 1, obj),\r\n        actualSecond = mergeSortHelper(second, toDispatch, indexHalf, end, obj),\r\n        isFinalMerge = false;\r\n    if (actualFirst.length + actualSecond.length === obj.array.length) isFinalMerge = true;\r\n    return actualSort(actualFirst, actualSecond, toDispatch, obj, start, end, isFinalMerge);\r\n}\r\n\r\nfunction actualSort(first, second, toDispatch, obj, start, end, isFinalMerge) {\r\n    let sortedArray = [];\r\n    let indexToPush = start;\r\n    while (first.length && second.length) {\r\n        toDispatch.push([first[0][1], second[0][1]]);\r\n        if (first[0][0] <= second[0][0]) {\r\n            indexToPush++;\r\n            sortedArray.push(first.shift());\r\n        } else {\r\n            toDispatch.push([first[0][1], second[0][1], true]);\r\n            second[0][1] = indexToPush++;\r\n            sortedArray.push(second.shift());\r\n            first.forEach(subArr => subArr[1]++);\r\n            if (start === 0) {\r\n                obj.array = sortedArray.map(subArr => subArr[0]).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n            } else {\r\n                obj.array = obj.array.slice(0, start).concat(sortedArray.map(subArr => subArr[0])).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n            }\r\n            toDispatch.push(obj.array.concat([indexToPush - 1, indexToPush]));\r\n            toDispatch.push([]);\r\n        }\r\n        if (isFinalMerge) toDispatch.push([true, indexToPush - 1]);\r\n    }\r\n    return sortedArray.concat(first).concat(second);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n    if (!toDispatch.length) {\r\n        dispatch(setMerge(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setMerge([]));\r\n            dispatch(setSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = toDispatch[0].length > 3 ?\r\n        setArray : toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\" || toDispatch[0].length === 0 ?\r\n            setSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n                setSorted : setMerge;\r\n    if (dispatchFunction === setArray) {\r\n        let currentToDispatch = toDispatch.shift();\r\n        dispatch(dispatchFunction(currentToDispatch.slice(0, currentToDispatch.length - 2)));\r\n        dispatch(setSwappers([]));\r\n        dispatch(setMerge([]));\r\n        dispatch(setSwappers([currentToDispatch[currentToDispatch.length - 2], currentToDispatch[currentToDispatch.length - 1]]));\r\n        dispatch(setMerge([currentToDispatch[currentToDispatch.length - 2], currentToDispatch[currentToDispatch.length - 1]]));\r\n    } else {\r\n        dispatch(dispatchFunction(toDispatch.shift()));\r\n    }\r\n    setTimeout(() => {\r\n        handleDispatch(toDispatch, dispatch, array, speed);\r\n    }, speed);\r\n}\r\n\r\nexport default mergeSort;","import {\r\n  setArray,\r\n  setPivot,\r\n  setSwappers,\r\n  setSorted,\r\n  setQuick,\r\n  setRunning\r\n} from '../actions'\r\n\r\nfunction quickSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n    toDispatch = [];\r\n  quickSortHelper(array, 0, array.length - 1, toDispatch);\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction quickSortHelper(array, start, end, toDispatch) {\r\n  if (start >= end) {\r\n    toDispatch.push([true, start]);\r\n    return;\r\n  }\r\n  let pivot = start,\r\n    left = start + 1,\r\n    right = end;\r\n  toDispatch.push(pivot);\r\n  toDispatch.push([left, right]);\r\n  while (right >= left) {\r\n    if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n      toDispatch.push([left, right, true]);\r\n      let temp = array[right];\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n      toDispatch.push(array.slice(0));\r\n      toDispatch.push([]);\r\n    }\r\n    if (array[right] >= array[pivot]) {\r\n      right--;\r\n    }\r\n    if (array[left] <= array[pivot]) {\r\n      left++;\r\n    }\r\n    if (right >= left) toDispatch.push([left, right]);\r\n  }\r\n  toDispatch.push([pivot, right]);\r\n  if (pivot !== right) {\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    toDispatch.push([pivot, right, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    toDispatch.push([true, right]);\r\n  }\r\n  quickSortHelper(array, start, right - 1, toDispatch);\r\n  quickSortHelper(array, right + 1, end, toDispatch);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setPivot(null));\r\n    dispatch(setQuick(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setQuick([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = !(toDispatch[0] instanceof Array) ?\r\n    setPivot : toDispatch[0].length > 3 ?\r\n      setArray : toDispatch[0].length !== 2 ?\r\n        setSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n          setSorted : setQuick;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  if (dispatchFunction === setPivot) dispatch(setQuick(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default quickSort;","import {\r\n    setArray,\r\n    setSorted,\r\n    setSwappers,\r\n    setRunning,\r\n    setCocktail\r\n} from '../actions'\r\n\r\nfunction cocktailSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        toDispatch = [],\r\n        sorted = false,\r\n        roundLeft = 0,\r\n        roundRight = 0;\r\n\r\n    while (!sorted) {\r\n        for (let i = roundLeft; i < array.length - 1 - roundRight; i++) {\r\n            toDispatch.push([i, i + 1]);\r\n            if (array[i] > array[i + 1]) {\r\n                toDispatch.push([i, i + 1, true]);\r\n                let aux = array[i];\r\n                array[i] = array[i + 1];\r\n                array[i + 1] = aux;\r\n                sorted = false;\r\n                toDispatch.push(array.slice(0));\r\n                toDispatch.push([]);\r\n            }\r\n        }\r\n        toDispatch.push([true, array.length - 1 - roundRight]);\r\n        roundRight++;\r\n        if (sorted)\r\n            break;\r\n        sorted = true;\r\n        for (let j = array.length - 1 - roundRight; j > roundLeft; j--) {\r\n            toDispatch.push([j, j - 1]);\r\n            if (array[j - 1] > array[j]) {\r\n                toDispatch.push([j, j - 1, true]);\r\n                let aux = array[j];\r\n                array[j] = array[j - 1];\r\n                array[j - 1] = aux;\r\n                sorted = false;\r\n                toDispatch.push(array.slice(0));\r\n                toDispatch.push([]);\r\n            }\r\n        }\r\n        toDispatch.push([true, roundLeft]);\r\n        roundLeft++;\r\n    }\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n    if (!toDispatch.length) {\r\n        dispatch(setCocktail(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setCocktail([]));\r\n            dispatch(setSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n\r\n    let dispatchFunction = toDispatch[0].length > 3 ?\r\n        setArray : toDispatch[0].length === 3 || toDispatch[0].length === 0 ?\r\n            setSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n                setSorted : setCocktail;\r\n\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(toDispatch, dispatch, array, speed);\r\n    }, speed);\r\n\r\n}\r\n\r\nexport default cocktailSort;","import {\r\n    setArray,\r\n    setSorted,\r\n    setRunning,\r\n    setBubble,\r\n    setSwappers\r\n} from '../actions/'\r\n\r\nfunction bubbleSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        toDispatch = [],\r\n        sorted = false,\r\n        round = 0;\r\n    while (!sorted) {\r\n        sorted = true;\r\n        for (let i = 0; i < array.length - 1 - round; i++) {\r\n            toDispatch.push([i, i + 1]);\r\n            if (array[i] > array[i + 1]) {\r\n                toDispatch.push([i, i + 1, true]);\r\n                let temp = array[i];\r\n                array[i] = array[i + 1];\r\n                array[i + 1] = temp;\r\n                sorted = false;\r\n                toDispatch.push(array.slice(0));\r\n                toDispatch.push([]);\r\n            }\r\n        }\r\n        toDispatch.push([true, array.length - 1 - round]);\r\n        round++;\r\n    }\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n    return array;\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n    if (!toDispatch.length) {\r\n        dispatch(setBubble(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setBubble([]));\r\n            dispatch(setSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    //console.log(toDispatch[0]);\r\n    let dispatchFunction = toDispatch[0].length > 3 ?\r\n        setArray : toDispatch[0].length === 3 || toDispatch[0].length === 0 ?\r\n            setSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n                setSorted : setBubble;\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(toDispatch, dispatch, array, speed);\r\n    }, speed);\r\n}\r\n\r\nexport default bubbleSort;","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../actions/\";\r\n\r\nimport heapSort from '../algorithms/heapSort'\r\nimport mergeSort from '../algorithms/mergeSort'\r\nimport quickSort from '../algorithms/quickSort'\r\nimport cocktailSort from '../algorithms/cocktailSort'\r\nimport bubbleSort from '../algorithms/bubbleSort';\r\n\r\n\r\nconst ButtonAlgorithm = ({ algorithm, children }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const reduxState = useSelector(state => state);\r\n    const { array, isRunning } = reduxState;\r\n\r\n    const sort = (algorithm, array, speed) => {\r\n        let doSort = algorithm === \"bubble\" ?\r\n            bubbleSort : algorithm === \"hope\" ?\r\n                heapSort : algorithm === \"merge\" ?\r\n                    mergeSort : algorithm === \"quick\" ?\r\n                        quickSort : algorithm === \"cocktail\" ?\r\n                            cocktailSort : null;\r\n        dispatch(actions.setSorted([]));\r\n        dispatch(actions.setRunning(true));\r\n        doSort(array, dispatch, speed);\r\n    }\r\n\r\n    const speed = 570 - Math.pow(array.length, 2) > 0 ?\r\n        570 - Math.pow(array.length, 2) : 0;\r\n    const color = isRunning ? \"rgba(214, 29, 29, 1)\" : \"white\";\r\n    const cursor = isRunning ? \"not-allowed\" : \"pointer\";\r\n\r\n    return (\r\n        <div className=\"menu__item\" style={{ cursor: cursor }}\r\n            onClick={\r\n                !isRunning\r\n                    ? () => {\r\n                        sort(algorithm, array, speed);\r\n                    } : null\r\n            }\r\n        >\r\n            <div className=\"menu__link\" style={{ color: color }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ButtonAlgorithm;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../actions/\";\r\n\r\nimport ButtonAlgorithm from './ButtonAlgorithm.jsx';\r\n\r\nconst Toolbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const reduxState = useSelector(state => state);\r\n    const { isRunning } = reduxState;\r\n\r\n    const generateArray = (length) => {\r\n        let array = [];\r\n        while (array.length < length)\r\n            array.push(Math.floor(Math.random() * 200) + 10);\r\n        dispatch(actions.setArray(array));\r\n        dispatch(actions.setSorted([]));\r\n    }\r\n\r\n    const [classMenu, setClassMenu] = useState('menu--show');\r\n    const [loading, setLoading] = useState(true);\r\n    const [sizeArray, setSizeArray] = useState(50);\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            generateArray(sizeArray);\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const color = isRunning ? \"rgba(214, 29, 29, 1)\" : \"white\";\r\n    const cursor = isRunning ? \"not-allowed\" : \"pointer\";\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"top-bar\">\r\n                <div\r\n                    onClick={\r\n                        () => {\r\n                            if (classMenu === 'menu') {\r\n                                return setClassMenu('menu--show');\r\n                            }\r\n                            return setClassMenu('menu');\r\n                        }\r\n                    } className=\"icon-menu\"\r\n                >\r\n                    <div className=\"icon-menu__bar\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <nav>\r\n                <div className={classMenu}>\r\n                    <div className=\"menu__item\"\r\n                        style={{ cursor: cursor }}\r\n                        onClick={() => !isRunning ? generateArray(sizeArray) : null}>\r\n                        <div className=\"menu__link\" style={{ color: color }}>\r\n                            Generate new Array\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"menu__item\" style={{ cursor: cursor }} >\r\n                        <div className=\"menu__link\" style={{ color: color }}>\r\n                            Change Array Size & Sorting speed\r\n                            <input\r\n                                className=\"range\"\r\n                                type=\"range\"\r\n                                min=\"4\"\r\n                                value={sizeArray}\r\n                                max=\"100\"\r\n                                disabled={isRunning ? \"disabled\" : null}\r\n                                onChange={(e) => {\r\n                                    generateArray(e.target.value);\r\n                                    setSizeArray(e.target.value);\r\n                                }}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <ButtonAlgorithm algorithm=\"hope\">\r\n                        Hope sort\r\n                    </ButtonAlgorithm>\r\n                    <ButtonAlgorithm algorithm=\"merge\">\r\n                        Merge sort\r\n                    </ButtonAlgorithm>\r\n                    <ButtonAlgorithm algorithm=\"quick\">\r\n                        Quick sort\r\n                    </ButtonAlgorithm>\r\n                    <ButtonAlgorithm algorithm=\"cocktail\">\r\n                        Cocktail sort\r\n                    </ButtonAlgorithm>\r\n                    <ButtonAlgorithm algorithm=\"bubble\">\r\n                        Bubble sort\r\n                    </ButtonAlgorithm>\r\n                </div>\r\n            </nav>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\nimport Body from './components/Body.jsx';\nimport Toolbar from './components/Toolbar.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = [];\r\n\r\nconst setArray = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"SET_ARRAY\":\r\n            return action.array\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setArray;","const initialState = \"bubbleSort\";\r\n\r\nconst setAlgorithm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_ALGORITHM\":\r\n            return action.algorithm\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setAlgorithm;","const initialState = false;\r\n\r\nconst setRunning = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_RUNNING\":\r\n            return action.isRunning\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default setRunning;","const initialState = [];\r\n\r\nconst setSwappers = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"SET_SWAPPERS\":\r\n            if(action.swappers.length){\r\n                return state.concat(action.swappers);\r\n            }\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setSwappers;","const initialState = [];\r\n\r\nconst setSorted = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_SORTED\":\r\n            if (action.sorted.length) {\r\n                return state.concat(action.sorted);\r\n            } \r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setSorted;","const initialState = [];\r\n\r\nconst setBubble = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_BUBBLE\":\r\n            return action.array\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setBubble;\r\n","const initialState = [];\r\n\r\nconst setHeap = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"SET_HEAP\":\r\n            return action.array\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default setHeap;","const initialState = [];\r\n\r\nconst setMerge = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_MERGE':\r\n            return action.array;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setMerge","const initialStateOne = [];\r\nconst initialStateTwo = null;\r\n\r\nconst quickSort = (state = initialStateOne, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUICK':\r\n            return action.array;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst pivot = (state = initialStateTwo, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PIVOT':\r\n            return action.pivot;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport { quickSort, pivot };","const initalState = [];\r\n\r\nconst cocktailSort = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_COCKTAIL':\r\n            return action.array;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cocktailSort;","const initialState = [];\r\n\r\nconst insertionSort = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_INSERTION':\r\n            return action.array;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default insertionSort;","import { combineReducers } from 'redux';\r\nimport array from '../reducers/array';\r\nimport algorithm from '../reducers/algorithm';\r\nimport isRunning from '../reducers/running';\r\nimport swappers from '../reducers/swappers';\r\nimport sorted from '../reducers/sorted';\r\nimport bubbleSort from '../reducers/bubbleSort';\r\nimport heapSort from '../reducers/heapSort';\r\nimport mergeSort from '../reducers/mergeSort';\r\nimport { quickSort, pivot } from '../reducers/quickSort';\r\nimport cocktailSort from '../reducers/cocktailSort';\r\nimport insertionSort from '../reducers/insertionSort';\r\n\r\nexport default combineReducers({\r\n    algorithm,\r\n    array,\r\n    isRunning,\r\n    swappers,\r\n    sorted,\r\n    bubbleSort,\r\n    heapSort,\r\n    mergeSort,\r\n    quickSort,\r\n    cocktailSort,\r\n    insertionSort,\r\n    pivot\r\n});","import { createStore } from \"redux\";\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}